{"ast":null,"code":"var _jsxFileName = \"/home/zain_khan/FullStack/Project01/frontend/src/components/ExtraFunc.jsx\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ExtraFunc(refreshTable) {\n  const deleteAll = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/api/deleteAll');\n      refreshTable(); // Refresh the table\n      console.log(\"Response from Flask: \", response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: deleteAll,\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Clear All Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = ExtraFunc;\nexport default ExtraFunc;\nvar _c;\n$RefreshReg$(_c, \"ExtraFunc\");","map":{"version":3,"names":["axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ExtraFunc","refreshTable","deleteAll","e","preventDefault","response","post","console","log","data","error","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","_c","$RefreshReg$"],"sources":["/home/zain_khan/FullStack/Project01/frontend/src/components/ExtraFunc.jsx"],"sourcesContent":["import axios from \"axios\";\n\nfunction ExtraFunc (refreshTable) {\n\n    const deleteAll = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post('http://localhost:5000/api/deleteAll')\n            refreshTable();  // Refresh the table\n            console.log(\"Response from Flask: \", response.data)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    return (\n        <>\n            <form onSubmit={deleteAll}>\n                <fieldset>\n                    <legend>Clear All Tasks</legend>\n                    <input type=\"submit\" value='Clear All' />\n                </fieldset>\n            </form>\n        </>\n    );\n}\n\nexport default ExtraFunc;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,SAASA,CAAEC,YAAY,EAAE;EAE9B,MAAMC,SAAS,GAAG,MAAOC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,qCAAqC,CAAC;MACxEL,YAAY,CAAC,CAAC,CAAC,CAAE;MACjBM,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,QAAQ,CAACI,IAAI,CAAC;IACvD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,oBACIb,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACId,OAAA;MAAMe,QAAQ,EAAEV,SAAU;MAAAS,QAAA,eACtBd,OAAA;QAAAc,QAAA,gBACId,OAAA;UAAAc,QAAA,EAAQ;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChCnB,OAAA;UAAOoB,IAAI,EAAC,QAAQ;UAACC,KAAK,EAAC;QAAW;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC,gBACT,CAAC;AAEX;AAACG,EAAA,GAvBQnB,SAAS;AAyBlB,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}